<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Extensions on Notad 官方文档 Docs</title>
    <link>https://0.0.0.0/extensions/</link>
    <description>Recent content in Extensions on Notad 官方文档 Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Released under the Apache2 license</copyright>
    
	<atom:link href="https://0.0.0.0/extensions/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://0.0.0.0/extensions/composer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://0.0.0.0/extensions/composer/</guid>
      <description> Composer 通过对 Composer 的自定义，可以实现 Composer 自动加载 Extension 定义的依赖项。
Type 配置 type 属性为 notadd-extension。
Require 添加 notadd/installers 的 Package，才能实现 Composer 自动加载 Extension 定义的依赖项。
完整示例 { &amp;quot;name&amp;quot;: &amp;quot;notadd/extension-demo&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;Notadd&#39;s Demo Extension.&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;notadd-extension&amp;quot;, &amp;quot;keywords&amp;quot;: [&amp;quot;notadd&amp;quot;, &amp;quot;demo&amp;quot;, &amp;quot;extension&amp;quot;], &amp;quot;homepage&amp;quot;: &amp;quot;https://notadd.com&amp;quot;, &amp;quot;license&amp;quot;: &amp;quot;Apache-2.0&amp;quot;, &amp;quot;authors&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;twilroad&amp;quot;, &amp;quot;email&amp;quot;: &amp;quot;269044570@qq.com&amp;quot; } ], &amp;quot;autoload&amp;quot;: { &amp;quot;psr-4&amp;quot;: { &amp;quot;Notadd\\Demo\\&amp;quot;: &amp;quot;src/&amp;quot; } }, &amp;quot;require&amp;quot;: { &amp;quot;php&amp;quot;: &amp;quot;&amp;gt;=7.0&amp;quot;, &amp;quot;notadd/installers&amp;quot;: &amp;quot;0.5.*&amp;quot; } }  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://0.0.0.0/extensions/expands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://0.0.0.0/extensions/expands/</guid>
      <description>拓展 expand 拓展一般需要在特定环境下实现，比如swoole拓展，需要安装swoole。
（拓展文档有待更新）</description>
    </item>
    
    <item>
      <title></title>
      <link>https://0.0.0.0/extensions/extension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://0.0.0.0/extensions/extension/</guid>
      <description> Extension 结构 Extension 的机制类似于 Laravel 中 Service Provider 的机制，提供了一种实现组件化的机制，并可以实现传统插件机制中的安装、卸载以及插件启动过程。
基本结构 一个完整的 Notadd Extension ，必然是遵循 Composer 相关规范的 Package。
目录结构 插件位于目录 extensions 下，插件目录结构如下
# vendor 厂商目录 # extension 插件目录 # configuations 可加载配置文件目录 # resources 资源目录 # translations 翻译文件目录 # views 视图目录 # src 源码目录 # bootstrap.php 插件启动脚本 # composer.json Composer 配置文件  其他说明  composer.json 中需定义 type 为 notadd-module composer.json 中需依赖 package 为 notadd/installers  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://0.0.0.0/extensions/provider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://0.0.0.0/extensions/provider/</guid>
      <description> Extension Extension 是 Extension 的模块入口文件，也 Module 的所有功能容器示例注册、路由注入等一系列功能注册及组件启动的服务提供者。
完整示例 namespace Notadd\Demo; use Notadd\Demo\Commands\DemoCommand; use Notadd\Demo\Listeners\RouteRegister; use Notadd\Foundation\Extension\Abstracts\Extension as AbstractExtension; /** * Class Extension. */ class Extension extends AbstractExtension { /** * Register extension handler. */ public function boot() { $this-&amp;gt;events-&amp;gt;subscribe(RouteRegister::class); $this-&amp;gt;commands(DemoCommand::class); $this-&amp;gt;loadViewsFrom(__DIR__ . &#39;/../resources/views&#39;, &#39;demo&#39;); } }  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://0.0.0.0/extensions/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://0.0.0.0/extensions/readme/</guid>
      <description>Extension 说明 Extension 作为 Notadd Framework 的一个特性存在，允许通过 Extension 的方式对 Notadd Framework 进行功能或模板的扩展。 Extension 的机制类似于 Laravel 中 Service Provider 的机制，提供了一种实现组件化的机制，并可以实现传统插件机制中的安装、卸载以及插件启动过程。
基本结构 一个完整的 Notadd Extension ，必然是遵循 Composer 相关规范的 Package。
目录结构 插件位于目录 extensions 下，插件目录结构如下
# vendor 厂商目录 # extension 插件目录 # configuations 可加载配置文件目录 # resources 资源目录 # translations 翻译文件目录 # views 视图目录 # src 源码目录 # Extension 扩展服务提供者定义文件 # composer.json Composer 配置文件   Extension Resources Composer  其他说明  composer.json 中需定义 type 为 notadd-extension composer.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://0.0.0.0/extensions/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://0.0.0.0/extensions/resources/</guid>
      <description>Resources Resources 目录是 Extension 的资源类文件放置的目录，包含如下几个类型目录：
 assets translations views  Assets assets 目录为前端相关资源或项目的放置目录。
Translations translations 目录为多语言资源文件的放置目录。
Views views 目录为视图资源文件的放置目录。</description>
    </item>
    
  </channel>
</rss>